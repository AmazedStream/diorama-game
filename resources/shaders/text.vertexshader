#version 400 core

layout (location = 0) in vec3 vertex_position;
layout (location = 1) in vec2 vertex_uv;
layout (location = 2) in vec3 vertex_rgb;

uniform mat4 mvp_matrix;
uniform float offset_angle;

out vec3 final_color;
out vec2 final_uv;

void main()
{
	//vec3 delta;
	//float y_scale = 0.1f;
	//float radius = 5.0f;
	//delta.x = sin (offset_angle + vertex_position.y * y_scale) * radius;
	//delta.z = cos (offset_angle + vertex_position.y * y_scale) * radius;
	//gl_Position = mvp_matrix * vec4 (vertex_position + delta, 1.0f);

	gl_Position = mvp_matrix * vec4 (vertex_position, 1.0f);

	final_uv = vertex_uv;

	float tint = (vertex_position.y / 64.0f) * 0.7f + 0.3f;
	final_color = vertex_rgb * vec3 (tint);
}
